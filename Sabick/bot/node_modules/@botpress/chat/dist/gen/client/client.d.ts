import { AxiosInstance } from 'axios';
import type { Merge, Except } from 'type-fest';
import { Configuration, DefaultApiGetConversationRequest, DefaultApiCreateConversationRequest, DefaultApiGetOrCreateConversationRequest, DefaultApiUpdateConversationRequest, DefaultApiDeleteConversationRequest, DefaultApiListConversationsRequest, DefaultApiListenConversationRequest, DefaultApiListConversationMessagesRequest, DefaultApiAddParticipantRequest, DefaultApiRemoveParticipantRequest, DefaultApiGetParticipantRequest, DefaultApiListParticipantsRequest, DefaultApiGetMessageRequest, DefaultApiCreateMessageRequest, DefaultApiGetOrCreateMessageRequest, DefaultApiUpdateMessageRequest, DefaultApiDeleteMessageRequest, DefaultApiGetUserRequest, DefaultApiCreateUserRequest, DefaultApiUpdateUserRequest, DefaultApiDeleteUserRequest } from '.';
export declare class ApiClient {
    private _innerClient;
    constructor(configuration?: Configuration, basePath?: string, axiosInstance?: AxiosInstance);
    getConversation: (props: GetConversationProps) => Promise<import("./api").GetConversationResponse>;
    createConversation: ({ xChatKey, ...createConversationBody }: CreateConversationProps) => Promise<import("./api").CreateConversationResponse>;
    getOrCreateConversation: ({ xChatKey, ...getOrCreateConversationBody }: GetOrCreateConversationProps) => Promise<import("./api").GetOrCreateConversationResponse>;
    updateConversation: ({ id, xChatKey, ...updateConversationBody }: UpdateConversationProps) => Promise<import("./api").UpdateConversationResponse>;
    deleteConversation: (props: DeleteConversationProps) => Promise<object>;
    listConversations: (props: ListConversationsProps) => Promise<import("./api").ListConversationsResponse>;
    listenConversation: (props: ListenConversationProps) => Promise<object>;
    listConversationMessages: (props: ListConversationMessagesProps) => Promise<import("./api").ListConversationMessagesResponse>;
    addParticipant: ({ id, xChatKey, ...addParticipantBody }: AddParticipantProps) => Promise<import("./api").AddParticipantResponse>;
    removeParticipant: (props: RemoveParticipantProps) => Promise<object>;
    getParticipant: (props: GetParticipantProps) => Promise<import("./api").GetParticipantResponse>;
    listParticipants: (props: ListParticipantsProps) => Promise<import("./api").ListParticipantsResponse>;
    getMessage: (props: GetMessageProps) => Promise<import("./api").GetMessageResponse>;
    createMessage: ({ xChatKey, ...createMessageBody }: CreateMessageProps) => Promise<import("./api").CreateMessageResponse>;
    getOrCreateMessage: ({ xChatKey, ...getOrCreateMessageBody }: GetOrCreateMessageProps) => Promise<import("./api").GetOrCreateMessageResponse>;
    updateMessage: ({ id, xChatKey, ...updateMessageBody }: UpdateMessageProps) => Promise<import("./api").UpdateMessageResponse>;
    deleteMessage: (props: DeleteMessageProps) => Promise<object>;
    getUser: (props: GetUserProps) => Promise<import("./api").GetUserResponse>;
    createUser: (createUserBody: CreateUserProps) => Promise<import("./api").CreateUserResponse>;
    updateUser: ({ xChatKey, ...updateUserBody }: UpdateUserProps) => Promise<import("./api").UpdateUserResponse>;
    deleteUser: (props: DeleteUserProps) => Promise<object>;
}
export type GetConversationProps = Merge<DefaultApiGetConversationRequest, {}>;
export type CreateConversationProps = Merge<Except<DefaultApiCreateConversationRequest, 'createConversationBody'>, NonNullable<DefaultApiCreateConversationRequest['createConversationBody']>>;
export type GetOrCreateConversationProps = Merge<Except<DefaultApiGetOrCreateConversationRequest, 'getOrCreateConversationBody'>, NonNullable<DefaultApiGetOrCreateConversationRequest['getOrCreateConversationBody']>>;
export type UpdateConversationProps = Merge<Except<DefaultApiUpdateConversationRequest, 'updateConversationBody'>, NonNullable<DefaultApiUpdateConversationRequest['updateConversationBody']>>;
export type DeleteConversationProps = Merge<DefaultApiDeleteConversationRequest, {}>;
export type ListConversationsProps = Merge<DefaultApiListConversationsRequest, {}>;
export type ListenConversationProps = Merge<DefaultApiListenConversationRequest, {}>;
export type ListConversationMessagesProps = Merge<DefaultApiListConversationMessagesRequest, {}>;
export type AddParticipantProps = Merge<Except<DefaultApiAddParticipantRequest, 'addParticipantBody'>, NonNullable<DefaultApiAddParticipantRequest['addParticipantBody']>>;
export type RemoveParticipantProps = Merge<DefaultApiRemoveParticipantRequest, {}>;
export type GetParticipantProps = Merge<DefaultApiGetParticipantRequest, {}>;
export type ListParticipantsProps = Merge<DefaultApiListParticipantsRequest, {}>;
export type GetMessageProps = Merge<DefaultApiGetMessageRequest, {}>;
export type CreateMessageProps = Merge<Except<DefaultApiCreateMessageRequest, 'createMessageBody'>, NonNullable<DefaultApiCreateMessageRequest['createMessageBody']>>;
export type GetOrCreateMessageProps = Merge<Except<DefaultApiGetOrCreateMessageRequest, 'getOrCreateMessageBody'>, NonNullable<DefaultApiGetOrCreateMessageRequest['getOrCreateMessageBody']>>;
export type UpdateMessageProps = Merge<Except<DefaultApiUpdateMessageRequest, 'updateMessageBody'>, NonNullable<DefaultApiUpdateMessageRequest['updateMessageBody']>>;
export type DeleteMessageProps = Merge<DefaultApiDeleteMessageRequest, {}>;
export type GetUserProps = Merge<DefaultApiGetUserRequest, {}>;
export type CreateUserProps = Merge<Except<DefaultApiCreateUserRequest, 'createUserBody'>, NonNullable<DefaultApiCreateUserRequest['createUserBody']>>;
export type UpdateUserProps = Merge<Except<DefaultApiUpdateUserRequest, 'updateUserBody'>, NonNullable<DefaultApiUpdateUserRequest['updateUserBody']>>;
export type DeleteUserProps = Merge<DefaultApiDeleteUserRequest, {}>;
