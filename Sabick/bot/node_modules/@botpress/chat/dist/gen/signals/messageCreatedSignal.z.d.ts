import { z } from "zod";
declare const _default: z.ZodObject<{
    type: z.ZodLiteral<"message_created">;
    data: z.ZodObject<{
        id: z.ZodString;
        fid: z.ZodOptional<z.ZodString>;
        createdAt: z.ZodString;
        payload: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"button">;
            variant: z.ZodEnum<["action", "link"]>;
            reusable: z.ZodOptional<z.ZodBoolean>;
            groupId: z.ZodOptional<z.ZodString>;
            text: z.ZodString;
            buttonValue: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
            type: "button";
            variant: "link" | "action";
            buttonValue: string;
            reusable?: boolean | undefined;
            groupId?: string | undefined;
        }, {
            text: string;
            type: "button";
            variant: "link" | "action";
            buttonValue: string;
            reusable?: boolean | undefined;
            groupId?: string | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"text">;
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
            type: "text";
        }, {
            text: string;
            type: "text";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"image">;
            orientation: z.ZodOptional<z.ZodEnum<["portrait", "landscape", "square", "auto"]>>;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
            type: "image";
            orientation?: "portrait" | "landscape" | "square" | "auto" | undefined;
        }, {
            url: string;
            type: "image";
            orientation?: "portrait" | "landscape" | "square" | "auto" | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"audio">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
            type: "audio";
        }, {
            url: string;
            type: "audio";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"video">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
            type: "video";
        }, {
            url: string;
            type: "video";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"file">;
            url: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            url: string;
            type: "file";
            title?: string | undefined;
        }, {
            url: string;
            type: "file";
            title?: string | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"location">;
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            type: "location";
            latitude: number;
            longitude: number;
            title?: string | undefined;
        }, {
            type: "location";
            latitude: number;
            longitude: number;
            title?: string | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"custom">;
            payload: z.ZodObject<{}, "strip", z.ZodAny, z.objectOutputType<{}, z.ZodAny, "strip">, z.objectInputType<{}, z.ZodAny, "strip">>;
        }, "strip", z.ZodTypeAny, {
            type: "custom";
            payload: {} & {
                [k: string]: any;
            };
        }, {
            type: "custom";
            payload: {} & {
                [k: string]: any;
            };
        }>]>;
        userId: z.ZodString;
        conversationId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        userId: string;
        payload: {
            text: string;
            type: "button";
            variant: "link" | "action";
            buttonValue: string;
            reusable?: boolean | undefined;
            groupId?: string | undefined;
        } | {
            text: string;
            type: "text";
        } | {
            url: string;
            type: "image";
            orientation?: "portrait" | "landscape" | "square" | "auto" | undefined;
        } | {
            url: string;
            type: "audio";
        } | {
            url: string;
            type: "video";
        } | {
            url: string;
            type: "file";
            title?: string | undefined;
        } | {
            type: "location";
            latitude: number;
            longitude: number;
            title?: string | undefined;
        } | {
            type: "custom";
            payload: {} & {
                [k: string]: any;
            };
        };
        conversationId: string;
        createdAt: string;
        fid?: string | undefined;
    }, {
        id: string;
        userId: string;
        payload: {
            text: string;
            type: "button";
            variant: "link" | "action";
            buttonValue: string;
            reusable?: boolean | undefined;
            groupId?: string | undefined;
        } | {
            text: string;
            type: "text";
        } | {
            url: string;
            type: "image";
            orientation?: "portrait" | "landscape" | "square" | "auto" | undefined;
        } | {
            url: string;
            type: "audio";
        } | {
            url: string;
            type: "video";
        } | {
            url: string;
            type: "file";
            title?: string | undefined;
        } | {
            type: "location";
            latitude: number;
            longitude: number;
            title?: string | undefined;
        } | {
            type: "custom";
            payload: {} & {
                [k: string]: any;
            };
        };
        conversationId: string;
        createdAt: string;
        fid?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        id: string;
        userId: string;
        payload: {
            text: string;
            type: "button";
            variant: "link" | "action";
            buttonValue: string;
            reusable?: boolean | undefined;
            groupId?: string | undefined;
        } | {
            text: string;
            type: "text";
        } | {
            url: string;
            type: "image";
            orientation?: "portrait" | "landscape" | "square" | "auto" | undefined;
        } | {
            url: string;
            type: "audio";
        } | {
            url: string;
            type: "video";
        } | {
            url: string;
            type: "file";
            title?: string | undefined;
        } | {
            type: "location";
            latitude: number;
            longitude: number;
            title?: string | undefined;
        } | {
            type: "custom";
            payload: {} & {
                [k: string]: any;
            };
        };
        conversationId: string;
        createdAt: string;
        fid?: string | undefined;
    };
    type: "message_created";
}, {
    data: {
        id: string;
        userId: string;
        payload: {
            text: string;
            type: "button";
            variant: "link" | "action";
            buttonValue: string;
            reusable?: boolean | undefined;
            groupId?: string | undefined;
        } | {
            text: string;
            type: "text";
        } | {
            url: string;
            type: "image";
            orientation?: "portrait" | "landscape" | "square" | "auto" | undefined;
        } | {
            url: string;
            type: "audio";
        } | {
            url: string;
            type: "video";
        } | {
            url: string;
            type: "file";
            title?: string | undefined;
        } | {
            type: "location";
            latitude: number;
            longitude: number;
            title?: string | undefined;
        } | {
            type: "custom";
            payload: {} & {
                [k: string]: any;
            };
        };
        conversationId: string;
        createdAt: string;
        fid?: string | undefined;
    };
    type: "message_created";
}>;
export default _default;
